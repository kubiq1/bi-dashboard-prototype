import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import ErrorBoundary from "@/components/error-boundary";
import RoutePreloader from "@/components/shared/RoutePreloader";

// Global error handler for clipboard API errors
if (typeof window !== "undefined") {
  window.addEventListener("error", (event) => {
    if (
      event.error?.name === "NotAllowedError" &&
      event.error?.message?.includes("Clipboard")
    ) {
      console.warn(
        "Clipboard API blocked by browser security policy. This is normal in development.",
      );
      event.preventDefault();
    }
  });

  window.addEventListener("unhandledrejection", (event) => {
    if (
      event.reason?.name === "NotAllowedError" &&
      event.reason?.message?.includes("Clipboard")
    ) {
      console.warn(
        "Clipboard API blocked by browser security policy. This is normal in development.",
      );
      event.preventDefault();
    }
  });
}

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ErrorBoundary>{children}</ErrorBoundary>
      </body>
    </html>
  );
}
